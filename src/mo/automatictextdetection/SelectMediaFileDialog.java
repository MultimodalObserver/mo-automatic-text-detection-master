/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mo.automatictextdetection;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import static mo.core.DataFileFinder.findFilesCreatedBy;

/**
 *
 * @author gustavo
 */
public class SelectMediaFileDialog extends javax.swing.JDialog {

    /**
     * Creates new form SelectMediaFileDialog
     */
    public SelectMediaFileDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //        this.videoFiles= findFilesCreatedBy(new File(this.dir.getPath()),"webcamcaptureplugin.WebcamRecorder");
    }

    public SelectMediaFileDialog(File dir) {
        super(null, "Seleccionar archivo", ModalityType.APPLICATION_MODAL);
         this.mediaFiles= findFilesCreatedBy(dir,"screencaptureplugin.ScreenRecorder");

       /*         this.mediaFilesBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { dialogBundle.getString("videoFileOptionBox") }));
 */
         this.setLocationRelativeTo(null);
         initComponents();
         
        java.util.ResourceBundle dialogBundle = java.util.ResourceBundle.getBundle("i18n/mo/analysis/textDetectionPlugin/atdPluginDialogs");                                   
        this.mediaFilesBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { dialogBundle.getString("videoFileOptionBox") }));         
         
                  for(File f : mediaFiles){
             this.mediaFilesBox.addItem(f.getName());
         }      
       
         this.mediaFilesBox.addItem(dialogBundle.getString("dontUseScreenCapture"));
         this.setLocationRelativeTo(null);
         this.setVisible(true);
                  

    }    
    
    public File getSelectedFile(){
        if(this.mediaFiles!=null){
            if(this.mediaFilesBox.getSelectedIndex()==this.mediaFilesBox.getItemCount()-1){
                return null;
            }
            else{
                return this.mediaFiles.get(this.mediaFilesBox.getSelectedIndex()-1);
            }
        }
        else{
            return null;
        }
    }
    
    
    public boolean showDialog() {
        return this.accepted;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mediaFilesBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/mo/analysis/textDetectionPlugin/atdPluginDialogs"); // NOI18N
        acceptButton.setText(bundle.getString("accept")); // NOI18N
        acceptButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acceptButtonMouseClicked(evt);
            }
        });

        cancelButton.setText(bundle.getString("cancel")); // NOI18N
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        mediaFilesBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Archivos" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mediaFilesBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(cancelButton)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(mediaFilesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptButton)
                    .addComponent(cancelButton))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acceptButtonMouseClicked
        if(this.mediaFilesBox.getSelectedIndex()>0){
            if(this.mediaFilesBox.getSelectedIndex()-1<this.mediaFiles.size()){
                this.accepted = true;
                this.selectedFile = this.mediaFiles.get(this.mediaFilesBox.getSelectedIndex()-1);
                this.dispose();
            }
            else{
                this.selectedFile = null;
                this.accepted = true;     
                this.dispose();
            }
        }
    }//GEN-LAST:event_acceptButtonMouseClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        this.accepted = false;
        this.selectedFile = null;
        this.dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectMediaFileDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectMediaFileDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectMediaFileDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectMediaFileDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectMediaFileDialog dialog = new SelectMediaFileDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> mediaFilesBox;
    // End of variables declaration//GEN-END:variables
    private List<File> mediaFiles;
    private boolean accepted;
    File selectedFile;
}
